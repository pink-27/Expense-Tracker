input {
  file {
    path => "/app/logs/backend.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}" # Match timestamp at the beginning of each line
      what => "previous" # Combine lines with the previous one
    }
  }
}



filter {
  grok {
    match => {
      "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{NUMBER:pid} --- \[%{DATA:thread}\] %{JAVACLASS:logger} : %{GREEDYDATA:log_message}"
    }
  }

  # Handle the timestamp properly
  date {
    match => ["timestamp", "ISO8601"]
    target => "@timestamp"
  }
}



output {
  # Send logs to Elasticsearch
  elasticsearch {
    hosts => ["http://localhost:9200/"]  # Use the service name 'elasticsearch'
    index => "logstash-logs-%{+YYYY.MM.dd}"  # Daily index pattern
  }

  # Debugging: print logs to the console
  stdout {
    codec => rubydebug
  }
}
