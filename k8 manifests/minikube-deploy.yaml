# Persistent Volume Claims
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-for-elk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard  # Explicitly specify the storage class

---
# Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myappdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myappdb
  template:
    metadata:
      labels:
        app: myappdb
    spec:
      containers:
        - name: myappdb
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data

---
# Database Service (NodePort)
apiVersion: v1
kind: Service
metadata:
  name: myappdb-service
spec:
  selector:
    app: myappdb
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30001  # Specify the external port
  type: NodePort

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: pink27/frontend:latest
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1  # Number of pods created above the desired replicas count
      maxUnavailable: 1  # Maximum number of pods that can be unavailable during the update

---
# Frontend Service (NodePort)
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30002  # Specify the external port
  type: NodePort

---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: pink27/backend:latest
          ports:
            - containerPort: 8081
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://myappdb-service:5432/minisplitwise?createDatabaseIfNotExist=true"
            - name: SPRING_DATASOURCE_USERNAME
              value: "myappdb"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "abc123"
          volumeMounts:
            - name: logs-for-elk
              mountPath: /app/logs
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"
      volumes:
        - name: logs-for-elk
          persistentVolumeClaim:
            claimName: logs-for-elk
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30003  # Specify the external port
  type: NodePort
