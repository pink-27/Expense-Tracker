version: '3'
services:
  myappdb:
    image: "postgres:latest"
    container_name: myappdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: myappdb
      POSTGRES_PASSWORD: abc123
      POSTGRES_DB: minisplitwise
    ports:
      - 5432:5432
    networks:
      - my-network
  
  frontend:
    image: pink27/frontend:latest
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - my-network
  
  backend:
    image: pink27/backend:latest
    ports:
      - "8081:8081"
    depends_on:
      - myappdb
    container_name: backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://myappdb:5432/minisplitwise?createDatabaseIfNotExist=true
    volumes:
      - logs-for-elk:/app/logs
    networks: 
      - my-network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.12
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - my-network
  
  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.12
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - logs-for-elk:/app/logs
    depends_on:
      - elasticsearch

    ports:
      - "5001:5000"  # Changed to 5001 on the host machine

    networks:
      - my-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.12
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - my-network

volumes:
  postgres-data:
    driver: local
  logs-for-elk:
    driver: local

networks:
  my-network:
    driver: bridge
